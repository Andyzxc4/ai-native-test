// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  passwordHash      String
  fullName          String
  phoneNumber       String   @unique
  balance           Float    @default(0.0)
  role              String   @default("USER")
  twoFactorEnabled  Boolean  @default(false)
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  sentTransactions     Transaction[] @relation("SentTransactions")
  receivedTransactions Transaction[] @relation("ReceivedTransactions")
  otpCodes            OtpCode[]
  sessions           Session[]

  @@map("users")
}

model Transaction {
  id                    String            @id @default(cuid())
  transactionId         String            @unique
  senderId              String
  recipientId           String
  amount                Float
  currency              String            @default("PHP")
  status                String            @default("PENDING")
  paymentMethod         String            @default("GCASH")
  qrCodeData            String?
  audioConfirmationUrl  String?
  description           String?
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  completedAt           DateTime?

  // Relations
  sender    User @relation("SentTransactions", fields: [senderId], references: [id])
  recipient User @relation("ReceivedTransactions", fields: [recipientId], references: [id])

  @@map("transactions")
}

model OtpCode {
  id        String   @id @default(cuid())
  userId    String
  code      String
  type      String   @default("LOGIN")
  expiresAt DateTime
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("otp_codes")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model PaymentSession {
  id            String   @id @default(cuid())
  transactionId String   @unique
  qrCodeData    String
  expiresAt     DateTime
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())

  @@map("payment_sessions")
}

